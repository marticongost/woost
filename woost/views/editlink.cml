<?xml version="1.0" encoding="utf-8"?>

<?py
from cocktail.controllers import get_request_url
from woost import app
from woost.models import (
    Publishable,
    Configuration,
    CreatePermission,
    ModifyPermission,
    DeletePermission
)
from woost.models.utils import any_translation
?>

<a
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    action = "modify"
    target = None
    target_desc = None
    action_permissions = {
        "create": CreatePermission,
        "modify": ModifyPermission,
        "delete": DeletePermission
    }
    edit_parameters = {}

    def is_permitted(self):
        return app.user.has_permission(
            self.action_permissions[self.action],
            target = self.target
        )

    def get_uri(self):

        backoffice = Publishable.get_instance(qname = "woost.backoffice")
        parameters = self.edit_parameters.copy()

        if self.action == "create":
            parameters["item_type"] = self.target.full_name
            path = ["content", "new", "fields"]
        elif self.action == "modify":
            path = ["content", self.target.id, "fields"]
        elif self.action == "delete":
            path = ["delete"]
            parameters["selection"] = self.target.id,

        return backoffice.get_uri(path = path, parameters = parameters)
    ?>

    <py:ready>
        <?py
        if self.edit_parameters is self.__class__.edit_parameters:
            self.edit_parameters = self.edit_parameters.copy()

        if self.target is None:
            self.target = app.publishable

        if self.target_desc is None:
            if self.target is app.publishable:
                self.target_desc = any_translation("woost.views.EditLink.publishable_target")
            else:
                self.target_desc = any_translation(self.target)

        if "root_url" not in self.edit_parameters:
            self.edit_parameters["root_url"] = get_request_url()

        if not self.is_permitted():
            self.visible = False

        self["href"] = self.get_uri()
        ?>
    </py:ready>

    <img py:id="icon"
        src="${normalize_resource_uri('woost://images/EditLink-%s.png' % self.action)}"/>

    <span py:id="label">
        @{any_translation("woost.views.EditLink." + self.action, target_desc = self.target_desc)}
    </span>

</a>

