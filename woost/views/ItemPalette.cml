<?xml version="1.0" encoding="utf-8"?>
<?py
from cocktail.schema import SchemaClass
from cocktail.controllers import context
from woost import app
from woost.models import get_current_user, CreatePermission
?>

<ul
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    icon_size = 16
    types = None

    def should_include_type(self, content_type):
        return (
            content_type.visible
            and content_type.instantiable
            and self._user.has_permission(CreatePermission, target = content_type)
        )
    ?>

    <py:binding>
        <?py
        self._user = get_current_user()
        self._cms = context['cms']

        if isinstance(self.types, SchemaClass):
            self._types = [self.types] + list(self.types.derived_schemas(recursive = True))
        else:
            self._types = self.types

        self._types.sort(key = lambda content_type: translations(content_type.name))
        ?>
    </py:binding>

    <py:ready>
        <py:new
            py:element="self.create_palette_entry(content_type)"
            py:for="content_type in self._types"
            py:where="self.should_include_type(content_type)"/>
    </py:ready>

    <li py:def="palette_entry" py:args="content_type">
        <a py:local_id="button" href="#">
            <img py:local_id="type_icon"  src="${app.icon_resolver.find_icon_url(content_type, self.icon_size)}"/>
            <span py:local_id="type_label">${translations(content_type.name)}</span>
        </a>
    </li>

</ul>

