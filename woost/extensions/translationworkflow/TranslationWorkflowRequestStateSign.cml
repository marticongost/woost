<?xml version="1.0" encoding="utf-8"?>

<py:woost.views.ItemDisplay
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    icon_visible = False

    def get_sign_background_color(self, base_color):
        return base_color

    def get_sign_border_color(self, base_color):

        base_color = base_color.lstrip("#")

        if len(base_color) == 3:
            rgb = [int(band * 2, 16) for band in base_color]
        elif len(base_color) == 6:
            rgb = [
                int(base_color[i:i + 2], 16)
                for i in (0, 2, 4)
            ]
        else:
            raise ValueError("Invalid color: %s" % base_color)

        return "#" + base_color if sum(rgb) / 3 < 160 else "#aaa"
    ?>

    <py:with py:element="self.label">
        <py:ready>
            <?py
            if self.item:
                base_color = self.item.state.color
                element.text_wrapper.set_style(
                    "background-color",
                    self.get_sign_background_color(base_color)
                )
                element.text_wrapper.set_style(
                    "border",
                    "1px solid %s !important" % self.get_sign_border_color(base_color)
                )
            ?>
        </py:ready>

        <?py
        @extend(element)
        def get_label(label):
            return ""
        ?>
    </py:with>

</py:woost.views.ItemDisplay>

