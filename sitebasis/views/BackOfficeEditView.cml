<?xml version="1.0" encoding="utf-8"?>

<?py
from cocktail.schema import Collection
from sitebasis.controllers.backoffice.useractions import \
    add_view_action_context
?>

<py:sitebasis.views.BackOfficeItemView
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py
    self.add_resource("/cocktail/scripts/jquery.js")
    self.add_resource("/cocktail/scripts/jquery.cookie.js")
    self.add_resource("/resources/scripts/backoffice_item.js")
    
    add_view_action_context(self, "edit")
    ?>

    <?py-class
    collections = ()
    errors = ()
    ?>
   
    <py:with py:element="self.item_body">

        <!-- Success message -->
        <div py:id="success" py:visible="@{self.saved}">
            ${translate("sitebasis.views.BackOfficeEditView Changes saved")}
        </div>

        <!-- Draft remark -->
        <div
            py:id="draft_box"
            py:visible="@{self.edited_item and self.edited_item.is_draft}"
            class="draft">
            <py:ready py:if="self.draft_box.visible">
                <?py
                if self.edited_item.draft_source:
                    element.append(
                        translate(
                            "Editing draft copy",
                            location = self.backoffice.get_edit_uri(
                                self.edited_item.draft_source
                            )
                        )
                    )
                else:
                    element.append(translate("Editing draft"))
                ?>
            </py:ready>
        </div>

        <!-- Errors -->
        <ul py:id="error_box"
            py:visible="@{self.submitted and self.errors}">
            <py:ready py:if="element.visible">
                <li py:for="error in self.errors">
                    ${translate(error)}
                </li>
            </py:ready>
        </ul>

        <!-- Tabs -->
        <div py:id="tabs">
            
            <button
                py:def="tab"
                py:args="member"
                type="submit"
                name="section">
                <?py
                is_collection = isinstance(member, Collection)
                section_id = member.name if is_collection else "fields"
                element["value"] = section_id
                element.add_class(member.name + "_tab")

                if section_id == self.section:
                    element.add_class("selected")

                if self.edited_item and (
                    (is_collection and self.edit_stack[-1].collection_has_changes(member))
                    or self.differences
                ):              
                    element.add_class("changed")
                ?>
                ${translate(member if is_collection else member.name)}
            </button>

            <py:ready>
                 <py:new py:element="self.create_tab(member)"
                     py:for="member in [self.edited_content_type] + list(self.collections)">
                     <?py
                     setattr(self, member.name + "_tab", element)
                     ?>
                 </py:new>
             </py:ready>
         </div>

    </py:with>

</py:sitebasis.views.BackOfficeItemView>
