<?xml version="1.0" encoding="utf-8"?>

<?py
from cocktail.modeling import extend, call_base
from cocktail.language import get_content_language
from sitebasis.models import AccessRule
?>

<py:sitebasis.views.BackOfficeItemView
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    form_schema = None
    form_data = None
    saved = None 
    submitted = False
    differences = None
    available_languages = ()
    translations = ()
    ?>

    <py:with py:element="self.edit_form_frame">

        <div py:id="edit_form_toolbar">

            <!-- Translations selector -->
            <div
                py:id="translations_selector"
                py:index="0"
                py:visible="@{self.edited_content_type.translated}"
                class="selector">

                <py:ready py:if="self.translations_selector.visible">
                    <?py
                    shortcut = translate("EditView translations shortcut", default = "")
                    if shortcut:
                        element.set_client_param("shortcut", shortcut)
                    ?>
                    <span class="label">${translate("Translations")}</span>                
                    <ul class="selector_content">
                        <li py:for="language in self.available_languages">
                            <?py
                            has_translation = language in self.translations
                            ?>
                            <div class="language">
                                <?py
                                if has_translation:
                                    element.add_class("selected")
                                ?>
                                ${translate(language)}
                            </div>
                            <button
                                py:if="not has_translation"
                                name="add_translation"
                                value="${language}">
                                <img src="/resources/images/add_small.png"/>
                            </button>
                            <button
                                py:if="has_translation and len(self.translations) > 1"
                                name="delete_translation"
                                value="${language}">
                                <img src="/resources/images/delete_small.png"/>
                            </button>
                        </li>
                    </ul>
                </py:ready>
            </div>
        </div>

        <py:sitebasis.views.ContentForm
            py:embeded="${True}"
            py:tag="div"
            py:id="edit_form"
            py:data="@{self.form_data}"
            py:schema="@{self.form_schema}"
            py:errors="@{self.submitted and self.form_errors}"
            py:translations="@{self.translations}"
            py:table_layout="${True}"
            py:edited_content_type="@{self.edited_content_type}"
            method="post">
            
            <!-- Small tweaks for access rules -->
            <py:with py:def="control" py:args="obj, member">
                <?py                                      
                if issubclass(self.edited_content_type, AccessRule) \
                and hasattr(element, "empty_label"):
                    element.empty_label = translate("Any")

                return element
                ?>
            </py:with>

            <!-- Highlight changed members -->
            <py:binding>
                <?py
                element.differences = set(
                    (member.name, language)                    
                    for member, language in self.differences
                )
                ?>
            </py:binding>

            <py:with py:def="field_instance" py:args="member">
                <?py
                key = (
                    member.name,
                    get_content_language()
                        if member.translated
                        else None
                )

                if key in self.differences:
                    element.add_class("changed")
                ?>
            </py:with>
            
        </py:sitebasis.views.ContentForm>

    </py:with>

    <py:with
        py:element="self.draft_box"
        py:before="self.edit_form.fields"/>

    <py:with
        py:element="self.error_box"
        py:before="self.edit_form.fields"/>

</py:sitebasis.views.BackOfficeItemView>
