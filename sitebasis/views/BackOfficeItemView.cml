<?xml version="1.0" encoding="utf-8"?>

<?py
from cocktail.schema import Collection
from sitebasis.controllers.backoffice.useractions import (
    get_view_actions, get_view_actions_context, add_view_action_context
)
?>

<py:sitebasis.views.BackOfficeLayout
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    selected_action = None
    ?>

    <py:ready>
        <?py
        self.set_client_param("edit_stack", self.edit_stack.to_param())
        self.add_class(self.edited_content_type.name)
        
        if self.edited_item.is_inserted:
        
            add_view_action_context(self, "existing_item")

            if self.edited_item.is_draft:
                add_view_action_context(self, "draft")

            if self.changes:
                add_view_action_context(self, "changed")
            else:
                add_view_action_context(self, "unchanged")                
        else:
            add_view_action_context(self, "new_item")

        self._actions_context = get_view_actions_context(self)
                                
        # Pending changes warning
        self.add_resource("/resources/scripts/BackOfficeItemView.js")
        self.set_client_param("hasPendingChanges", bool(self.changes))
        self.add_client_translation("sitebasis.views.BackOfficeItemView pending changes warning")
        ?>
    </py:ready>
    
    <!-- Turn the central content into a form -->
    <py:with
        py:element="self.body"
        py:tag="form"
        method="post">

        <!-- Default button (hidden) -->
        <button
            py:index="0"
            type="submit"
            name="item_action" value="save"
            style="display: none"/>

        <!-- Title -->
        <h2 py:parent="self.body" py:position="0">
            <py:ready>
                <?py
                if self.edited_item.is_inserted \
                and not (self.edited_item.is_draft and self.edited_item.draft_source is None):
                    context_desc = translations(self.edited_item)
                else:
                    context_desc = translations("creating", content_type = self.edited_content_type)
                ?>
                ${context_desc}
            </py:ready>
        </h2>

        <!-- Actions -->
        <py:sitebasis.views.ActionBar
            py:id="item_buttons"
            py:action_context="item_buttons"
            py:action_target="@{self.edited_item}"
            class="toolbar">
            <py:with
                py:def="action_button"
                py:args="action, extra"
                name="item_action">
                <?py
                if action is self.selected_action:
                    element.add_class("selected")
                ?>
            </py:with>
        </py:sitebasis.views.ActionBar>
        
        <div py:id="item_body"/>

        <!-- Actions -->
        <py:sitebasis.views.ActionBar
            py:id="item_bottom_buttons"
            py:action_context="item_bottom_buttons"
            py:action_target="@{self.edited_item}"
            class="toolbar">
            <py:with
                py:def="action_button"
                py:args="action, extra"
                name="item_action">
                <?py
                if action is self.selected_action:
                    element.add_class("selected")
                ?>
            </py:with>
        </py:sitebasis.views.ActionBar>

    </py:with>

</py:sitebasis.views.BackOfficeLayout>
