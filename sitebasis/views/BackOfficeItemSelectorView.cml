<?xml version="1.0" encoding="utf-8"?>

<?py
from cocktail.html.datadisplay import MULTIPLE_SELECTION
?>

<py:sitebasis.views.BackOfficeLayout
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:py="http://www.whads.com/ns/cocktail/templates">

    <?py-class
    user_collection = None
    available_languages = ()
    visible_languages = ()
    available_content_views = ()
    content_view = None
    member = None
    selection_mode = MULTIPLE_SELECTION
    ?>

    <?py
    self.add_resource("/cocktail/resources/jquery.js")
    self.set_client_param("dblclick_target", ".buttons .select_button")
    self.actions_context = set(["selector"])
    ?>
    
    <py:ready>
        <py:with py:element="self.content_view"
            py:parent="self.body"
            action="${self.cms.document_uri()}"
            py:cms="${self.cms}"
            py:backoffice="${self.backoffice}"
            py:user_collection="${self.user_collection}"
            py:available_languages="${self.available_languages}"
            py:visible_languages="${self.visible_languages}"
            py:available_content_views="${self.available_content_views}"
            py:actions="${['new']}"
            py:root_content_type="${self.root_content_type}"
            py:selection_mode="${self.selection_mode}">

            <?py
            edit_stack_param = self.edit_stack.to_param(len(self.edit_stack))
            ?>

            <!-- Propagate the active edit stack when creating a new element -->
            <py:with py:def="new_item_selector">
                <py:with
                    py:def="label"
                    py:args="content_type"
                    href="${element['href'] + '&amp;edit_stack=' + edit_stack_param}"/>
            </py:with>

            <!-- Propagate the edit stack when changing the active type -->
            <py:with py:element="element.content_type_selector">
                <py:with py:def="tree">
                    <?py
                    @refine(tree)
                    def get_item_url(tree, content_type):
                        url = "?type=" + content_type.__name__
                        if self.edit_stack:
                            url += "&edit_stack=" + self.edit_stack.to_param()
                        return url
                    ?>
                </py:with>
            </py:with>
        </py:with>
    </py:ready>

</py:sitebasis.views.BackOfficeLayout>
